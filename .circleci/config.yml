jobs:
  linux-python-2.7:
    docker:
    - image: circleci/python:2.7-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python-2.7-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo pip install --upgrade virtualenv

          test -e build-env/bin/activate || virtualenv build-env

          . build-env/bin/activate

          pip install --upgrade pip | cat

          pip install -r requirements.txt | cat

          pip install grpcio==1.9.1 tensorflow

          cd guild/view && npm install'
        name: Install build dependencies
    - save_cache:
        key: linux-python-2.7-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
    - run:
        command: sudo pip install dist/*.whl
        name: Install dist
    - run:
        command: 'guild init2 -y --no-progress --name guild-test --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          WORKSPACE=test-env guild check --uat'
        name: Test
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '. build-env/bin/activate

          twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
    working_directory: ~/repo
  linux-python-3.5:
    docker:
    - image: circleci/python:3.5-jessie-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python-3.5-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo pip install --upgrade virtualenv

          test -e build-env/bin/activate || virtualenv build-env

          . build-env/bin/activate

          pip install --upgrade pip | cat

          pip install -r requirements.txt | cat

          pip install grpcio==1.9.1 tensorflow

          cd guild/view && npm install'
        name: Install build dependencies
    - save_cache:
        key: linux-python-3.5-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
    - run:
        command: sudo pip install dist/*.whl
        name: Install dist
    - run:
        command: 'guild init2 -y --no-progress --name guild-test --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          WORKSPACE=test-env guild check --uat'
        name: Test
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '. build-env/bin/activate

          twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
    working_directory: ~/repo
  linux-python-3.6:
    docker:
    - image: circleci/python:3.6-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python-3.6-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo pip install --upgrade virtualenv

          test -e build-env/bin/activate || virtualenv build-env

          . build-env/bin/activate

          pip install --upgrade pip | cat

          pip install -r requirements.txt | cat

          pip install grpcio==1.9.1 tensorflow

          cd guild/view && npm install'
        name: Install build dependencies
    - save_cache:
        key: linux-python-3.6-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
    - run:
        command: sudo pip install dist/*.whl
        name: Install dist
    - run:
        command: 'guild init2 -y --no-progress --name guild-test --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          WORKSPACE=test-env guild check --uat'
        name: Test
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '. build-env/bin/activate

          twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
    working_directory: ~/repo
  macos-python-2.7:
    macos:
      xcode: 9.2.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos-python-2.7-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo pip install --upgrade virtualenv

          test -e build-env/bin/activate || virtualenv build-env

          . build-env/bin/activate

          pip install --upgrade pip | cat

          pip install -r requirements.txt | cat

          pip install grpcio==1.9.1 tensorflow

          cd guild/view && npm install'
        name: Install build dependencies
    - save_cache:
        key: macos-python-2.7-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          python setup.py bdist_wheel'
        name: Build
    - run:
        command: sudo pip install dist/*.whl
        name: Install dist
    - run:
        command: 'guild init2 -y --no-progress --name guild-test --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          WORKSPACE=test-env guild check --uat'
        name: Test
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '. build-env/bin/activate

          twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
    working_directory: ~/repo
  macos-python-3.6:
    macos:
      xcode: 9.2.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos-python-3.6-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew upgrade python > /dev/null

          sudo pip3 install --upgrade virtualenv

          test -e build-env/bin/activate || virtualenv build-env

          . build-env/bin/activate

          pip3 install --upgrade pip3 | cat

          pip3 install -r requirements.txt | cat

          pip3 install grpcio==1.9.1 tensorflow

          cd guild/view && npm install'
        name: Install build dependencies
    - save_cache:
        key: macos-python-3.6-12-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          python setup.py bdist_wheel'
        name: Build
    - run:
        command: sudo pip3 install dist/*.whl
        name: Install dist
    - run:
        command: 'guild init2 -y --no-progress --name guild-test --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          WORKSPACE=test-env guild check --uat'
        name: Test
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '. build-env/bin/activate

          twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
    working_directory: ~/repo
version: 2
workflows:
  all:
    jobs:
    - linux-python-2.7:
        filters:
          branches:
            only: release
    - linux-python-3.5:
        filters:
          branches:
            only: release
    - linux-python-3.6:
        filters:
          branches:
            only: release
    - macos-python-2.7:
        filters:
          branches:
            only: release
    - macos-python-3.6:
        filters:
          branches:
            only: release
  version: 2
