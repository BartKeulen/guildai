jobs:
  linux-python_2.7:
    docker:
    - image: circleci/python:2.7-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python_2.7-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python -m pip install --upgrade pip | cat

          sudo -H python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && python -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: linux-python_2.7-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python -m pip install --upgrade twine | cat

          python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  linux-python_3.5:
    docker:
    - image: circleci/python:3.5-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python_3.5-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python -m pip install --upgrade pip | cat

          sudo -H python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && python -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: linux-python_3.5-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python -m pip install --upgrade twine | cat

          python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  linux-python_3.6:
    docker:
    - image: circleci/python:3.6-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python_3.6-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python -m pip install --upgrade pip | cat

          sudo -H python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && python -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: linux-python_3.6-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python -m pip install --upgrade twine | cat

          python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  linux-python_3.7:
    docker:
    - image: circleci/python:3.7-stretch-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python_3.7-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python -m pip install --upgrade pip | cat

          sudo -H python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && python -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: linux-python_3.7-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python -m pip install --upgrade twine | cat

          python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  linux-python_3.8:
    docker:
    - image: circleci/python:3.8.1-node
    steps:
    - checkout
    - restore_cache:
        keys:
        - linux-python_3.8-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python -m pip install --upgrade pip | cat

          sudo -H python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && python -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: linux-python_3.8-20-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel -p manylinux1_x86_64'
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=*keras*,*logreg*,*mnist*,*tensorflow*,simple-example,test-flags,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python -m pip install --upgrade twine | cat

          python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.14-python_2.7:
    macos:
      xcode: 11.1.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.14-python_2.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python2 -m pip install --upgrade pip | cat

          sudo -H python2 -m pip install --upgrade virtualenv==16.7.9 | cat

          rm -rf build-env && python2 -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.14-python_2.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python2 -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python2 -m pip install --upgrade twine | cat

          python2 -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.14-python_3.6:
    macos:
      xcode: 11.1.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.14-python_3.6-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.6.11

          ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.6.11/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.14-python_3.6-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.6.11/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.6.11/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.6.11/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.14-python_3.7:
    macos:
      xcode: 11.1.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.14-python_3.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.7.9

          ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.7.9/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.14-python_3.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.7.9/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.7.9/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.7.9/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.14-python_3.8:
    macos:
      xcode: 11.1.0
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.14-python_3.8-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.8.6

          ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.8.6/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.14-python_3.8-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.8.6/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.8.6/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=*keras*,*logreg*,*mnist*,*tensorflow*,simple-example,test-flags,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.8.6/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.15-python_2.7:
    macos:
      xcode: 11.2.1
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.15-python_2.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'sudo -H python2 -m pip install --upgrade pip | cat

          sudo -H python2 -m pip install --upgrade virtualenv==16.7.9 | cat

          rm -rf build-env && python2 -m virtualenv build-env

          . build-env/bin/activate

          sudo -H build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.15-python_2.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: sudo -H python2 -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: 'guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: 'sudo -H python2 -m pip install --upgrade twine | cat

          python2 -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.15-python_3.6:
    macos:
      xcode: 11.2.1
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.15-python_3.6-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.6.11

          ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.6.11/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.15-python_3.6-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.6.11/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.6.11/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.6.11/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.6.11/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.15-python_3.7:
    macos:
      xcode: 11.2.1
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.15-python_3.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.7.9

          ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.7.9/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.15-python_3.7-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.7.9/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.7.9/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.7.9/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.7.9/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
  macos_10.15-python_3.8:
    macos:
      xcode: 11.2.1
    steps:
    - checkout
    - restore_cache:
        keys:
        - macos_10.15-python_3.8-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
    - run:
        command: 'brew install pyenv

          pyenv install 3.8.6

          ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade pip | cat

          ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade virtualenv | cat

          rm -rf build-env && ~/.pyenv/versions/3.8.6/bin/python -m virtualenv build-env

          . build-env/bin/activate

          build-env/bin/pip install --upgrade -r requirements.txt | cat

          cd guild/view && npm install'
        name: Install build dependencies
        no_output_timeout: 1800
    - save_cache:
        key: macos_10.15-python_3.8-19-{{ checksum "requirements.txt" }}-{{ checksum "guild/view/package.json" }}
        paths:
        - build-env
        - /usr/local/Homebrew
    - run:
        command: '. build-env/bin/activate

          build-env/bin/python setup.py bdist_wheel '
        name: Build
        no_output_timeout: 1800
    - run:
        command: ~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade dist/*.whl | cat
        name: Install dist
        no_output_timeout: 1800
    - run:
        command: '~/.pyenv/versions/3.8.6/bin/guild init -y --no-progress --name guild-test --no-reqs --guild dist/*.whl test-env

          TERM=xterm-256color source ~/.pyenv/versions/3.8.6/bin/guild-env test-env

          test-env/bin/guild check -v --offline

          WORKSPACE=test-env UAT_SKIP=*keras*,*logreg*,*mnist*,*tensorflow*,simple-example,test-flags,remote-*,hiplot-* COLUMNS=999 EXAMPLES=examples test-env/bin/guild check --uat'
        name: Test
        no_output_timeout: 1800
    - store_artifacts:
        destination: dist
        path: dist
    - run:
        command: '~/.pyenv/versions/3.8.6/bin/python -m pip install --upgrade twine | cat

          ~/.pyenv/versions/3.8.6/bin/python -m twine upload --skip-existing dist/*.whl'
        name: Upload to PyPI
        no_output_timeout: 1800
    working_directory: ~/repo
version: 2
workflows:
  all:
    jobs:
    - linux-python_2.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - linux-python_3.5:
        filters:
          branches:
            only:
            - release
            - pre-release
    - linux-python_3.6:
        filters:
          branches:
            only:
            - release
            - pre-release
    - linux-python_3.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - linux-python_3.8:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.14-python_2.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.15-python_2.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.14-python_3.6:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.15-python_3.6:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.14-python_3.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.15-python_3.7:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.14-python_3.8:
        filters:
          branches:
            only:
            - release
            - pre-release
    - macos_10.15-python_3.8:
        filters:
          branches:
            only:
            - release
            - pre-release
  version: 2
